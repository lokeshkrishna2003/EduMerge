{playlists.length !== 0  ?(
            <>
            {playlists.map((playlist) => (
            
            <PlaylistCard
              key={playlist._id}
              name={playlist.playlistName}
              videoCount={playlist.links.length}
              onEdit={(e) =>{
                e.stopPropagation(); // stops propagation of parent element opening
                handleEditPlaylist(playlist._id)
              } }
              onDelete={(e) =>{
                e.stopPropagation(); // stops propagation of parent element opening
                handleDeletePlaylist(playlist._id)
              } }
              onClickPlaylist={()=> handleClickPlaylist(playlist._id)}
            />
            
          ))}
            </>
          ):(
          <div className="flex justify-center items-center w-[100%] h-[5vh]  text-center" >
          <div className=" text-gray-500" data-aos='zoom-in'>No playlists found</div>
          </div>
          )}



          <h3 className="text-xl text-white font-semibold mb-5">{playlist?.playlistName
 || 'Playlist'}</h3>
              <ul className="space-y-3">
                {playlist?.links.map((link, index) => (
                  <li key={index} 
                      className={`p-2 rounded-m bg-gray-700 hover:bg-gray-600 rounded-md cursor-pointer transition duration-300 ease-in-out ${index === currentVideoIndex ? 'bg-gray-900' : ''}`}
                      onClick={() => changeVideo(index)}>
                    <span className="font-semibold text-white">{link.name} - </span>
                    <span className="text-gray-400 text-sm ml-2">
                      <FiLink className="inline mr-1 text-purple-500" />
                      {link.url}
                    </span>
                  </li>
                ))}
              </ul>